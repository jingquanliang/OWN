<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  
  <error-page>
	<error-code>404</error-code>
	<location>/notFound/NotFound404.jsp</location>
  </error-page>
	<!--  
  <error-page>
	<error-code>500</error-code>
	<location>/notFound/NotFound500.jsp</location>
  </error-page> -->
  
    <!-- 解决xss漏洞  ，暂时不用这个，因为发现这个东西对struct2 无效，可能对不用structs 的有效
  <filter>
    <filter-name>xssFilter</filter-name>
     <filter-class>admin.ru.own.www.xss.XssFilter</filter-class>
  </filter>  -->

  <!-- 解决xss漏洞 
  <filter-mapping>
    <filter-name>xssFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping> -->
  
  <welcome-file-list>
  <!--  <welcome-file>index.jsp</welcome-file> -->
    <welcome-file>index.action</welcome-file>
  </welcome-file-list>
  <servlet>
    <servlet-name>ConnectorServlet</servlet-name>
    <servlet-class>com.ckfinder.connector.ConnectorServlet</servlet-class>
    <init-param>
      <param-name>XMLConfig</param-name>
      <param-value>/WEB-INF/config.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>ConnectorServlet</servlet-name>
    <url-pattern>
			/ckfinder/core/connector/java/connector.java
	</url-pattern>
  </servlet-mapping>
  <filter>
    <filter-name>FileUploadFilter</filter-name>
    <filter-class>com.ckfinder.connector.FileUploadFilter</filter-class>
    <init-param>
      <param-name>sessionCookieName</param-name>
      <param-value>JSESSIONID</param-value>
    </init-param>
    <init-param>
      <param-name>sessionParameterName</param-name>
      <param-value>jsessionid</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>FileUploadFilter</filter-name>
    <url-pattern>
			/ckfinder/core/connector/java/connector.java
     	 </url-pattern>
  </filter-mapping>
  <session-config>
    <session-timeout>10</session-timeout>
  </session-config>
  
     <!-- 
    //生成验证码的servlet 
      <servlet>
	    <servlet-name>ImageServlet</servlet-name>
	    <servlet-class>admin.ru.own.www.validcode.ImageServlet</servlet-class>
	  </servlet>
	
	  <servlet-mapping>
	    <servlet-name>ImageServlet</servlet-name>
	    <url-pattern>/imageServlet</url-pattern>
	  </servlet-mapping>
    -->

    <!--客户端获取前一次请求的url -->
  <filter>
    <filter-name>customer_request_url</filter-name>
    <filter-class>ru.own.www.filter.QequestURLFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>customer_request_url</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!--客户端登录过滤(获取前一次请求的url)-->
  <filter>
    <filter-name>customer_login</filter-name>
    <filter-class>ru.own.www.filter.CustomerAuthFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>customer_login</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
    <!-- 后台登陆过滤 （获取前一次请求的url）-->
  <filter>
    <filter-name>admin_login</filter-name>
    <filter-class>admin.ru.own.www.logic.AuthFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>admin_login</filter-name>
    <url-pattern>/jqladmin/*</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>struts-cleanup</filter-name>
    <filter-class>org.apache.struts2.dispatcher.ActionContextCleanUp</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>struts-cleanup</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>EncodingFilter</filter-name>
    <filter-class>admin.ru.own.www.logic.EncodingFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>EncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>struts2</filter-name>
    <filter-class>
		 <!-- admin.ru.own.www.ckfinder.Struts2Filter -->
		 admin.ru.own.www.ueditor.MyUeditorFilter 
	    <!--	org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter-->
		<!--  org.apache.struts2.dispatcher.FilterDispatcher-->
	</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>struts2</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
  </filter-mapping>
  
  <!-- spring 配置 ，启动的时候，可以加载相应的spring容器以及各种bean
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:configfile/applicationContext.xml</param-value>
  </context-param> -->
</web-app>